# -*- sh -*-

mkcd() {
	[ $# -eq 1 ] || { echo 'Usage: mkcd <dir>' >&2; return 1; }
	mkdir "$1" && cd "$1"
}
export -f mkcd

### Create a scratch dir.
### See http://ku1ik.com/2012/05/04/scratch-dir.html
scratch() {
    local link=~/scratch
    local dir=/tmp/scratch-`date +%s`

    mkdir -p $dir
    ln -nfs $dir $link
    cd $link
}
export -f scratch

which hd &>/dev/null || {
    hd() { hexdump -C "$@"; }
#    hd() { xxd "$@"; }
    export -f hd
}

### git helpers
b() { git branch "$@"; }
cl() {
    local OPT='-n'
    [ "$*" = '-f' ] && OPT=''
    git clean -fdx $OPT
    git submodule -q foreach --recursive git clean -fdx $OPT
}
di() { git diff "$@"; }
lo() { git log "$@"; }
re() { git remote "$@"; }
st() { git status "$@"; }
export -f b cl di lo re st

worktree() {
    if (($# != 2)); then
        cat >&2 <<EOF
Usage: ${FUNCNAME[0]} <branch-name> <start-point>

Example: ${FUNCNAME[0]} feature origin/master
EOF
        return 1
    fi
    local branch=$1
    local start=$2

    local toplevel=$(git rev-parse --show-toplevel)
    [[ -n $toplevel ]] || return 1
    local newdir=${toplevel%/*}/_${toplevel##*/}.$branch

    if [[ -d $newdir ]]; then
        echo "$newdir already exists" >&2
        return 1
    fi

    local opt_new_branch=
    git rev-parse --verify $branch >&/dev/null ||
        # branch doesn't exist ==> create it
        opt_new_branch="-b $branch"

    git worktree add $opt_new_branch $newdir $start && cd $newdir
}
export -f worktree

which gtags &>/dev/null && {
    gt() {
        (
            set -eu -o pipefail
            d=$(git rev-parse --show-toplevel 2>/dev/null || true)
            cd ${d:-~/src/mero}
            if [ -r GPATH -a -r GRTAGS -a -r GTAGS ]; then
                global -u 2>/dev/null
            else
                gtags 2>/dev/null
            fi
            mkid &>/dev/null || true
        )
    }
    export -f gt
}

which hasktags &>/dev/null && {
    ht() { hasktags --etags .; }
}

### Alternative (and better) approach is to use `errno' (Debian) or
### `perror' (from `mysql-server' yum package).
errgrep() {
    if [[ -z $(tr -d '0-9' <<<$*) ]]; then
        local errno=$*
        cpp -dM /usr/include/errno.h | grep '^#define E' |
            grep -E "\<$errno\>" | tr -d \\n
        perl -E '$!=shift; say " /* $! */"' $errno
    else
        cpp -dM /usr/include/errno.h | grep '^#define E' | grep "$@"
    fi
}
export -f errgrep

### http://wttr.in/:bash.function
wttr() {
    curl -H "Accept-Language: uk" wttr.in/"${1:-Kyiv}?m"
}
